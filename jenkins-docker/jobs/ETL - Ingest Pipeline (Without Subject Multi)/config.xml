<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@1400.v7fd111b_ec82f">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@2.2205.vc9522a_9d5711"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@2.2205.vc9522a_9d5711">
      <jobProperties/>
      <triggers/>
      <parameters/>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description>This pipeline should be run when introducing a Non Compliant Study or updating a new Version.&#xd;
&#xd;
This is a work in progress.  Use cautiously.&#xd;
&#xd;
Prerequisite:&#xd;
BDC Managed Inputs should be updated.&#xd;
New Studies need to be decoded and be patient ids should be sequenced.</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <org.jenkinsci.plugins.workflow.job.properties.DisableConcurrentBuildsJobProperty>
      <abortPrevious>false</abortPrevious>
    </org.jenkinsci.plugins.workflow.job.properties.DisableConcurrentBuildsJobProperty>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@3943.v3519a_3260660">
    <script>import groovy.json.JsonSlurper;
pipeline {
    agent any 
    stages {
        stage(&apos;Create mapping file and Generate All Concepts for Non compliant Studies Not processed yet&apos;) { 
            steps {
                script {
                    build job: &apos;ETL - Generate Non_DBGAP Mapping Files&apos;
                    
                }
                script {
                    build job: &apos;ETL - Generate Non-DBGap All Concepts with Data Type Analyzer&apos;
                }
            }
        }
        stage(&apos;Importing non-compliant Data Dictionaries&apos;) {
            steps {
                script {
                    build job: &apos;ETL - Import Metadata From git&apos;
                }
            }
        }
    }
}</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>