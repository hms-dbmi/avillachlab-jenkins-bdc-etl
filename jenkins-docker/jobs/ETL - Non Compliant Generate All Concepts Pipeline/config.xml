<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@1145.v7f2433caa07f">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@1.9.3"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@1.9.3">
      <jobProperties/>
      <triggers/>
      <parameters/>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description>This pipeline should be run when introducing a Non Compliant Study or updating a new Version.&#xd;
&#xd;
This is a work in progress.  Use cautiously.&#xd;
&#xd;
Prerequisite:&#xd;
BDC Managed Inputs should be updated.&#xd;
New Studies need to be decoded and be patient ids should be sequenced.</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <org.jenkinsci.plugins.workflow.job.properties.DisableConcurrentBuildsJobProperty>
      <abortPrevious>false</abortPrevious>
    </org.jenkinsci.plugins.workflow.job.properties.DisableConcurrentBuildsJobProperty>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.33">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2656.vf7a_e7b_75a_457">
    <script>import groovy.json.JsonSlurper;
pipeline {
    agent any 
    stages {
        stage(&apos;Create mapping file and Generate All Concepts for Non compliant Studies Not processed yet&apos;) { 
            steps {
                script {
                    build job: &apos;ETL - Generate Non_DBGAP Mapping Files&apos;
                    
                }
                script {
                    build job: &apos;ETL - Generate Non-DBGap All Concepts with Data Type Analyzer&apos;
                }
            }
        }
        stage(&apos;Generate Global Variables&apos;) { 
            steps {
                script {
                    build job: &apos;ETL - Generate Non-DBGAP Global All Concepts&apos;
                }
            }
        }
        stage(&apos;Importing DBGap Data Dictionaries&apos;) {
            steps {
                script {
                    build job: &apos;ETL - Import Metadata From git&apos;
                }
            }
        }
    }
}</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>