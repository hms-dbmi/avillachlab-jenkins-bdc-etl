<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@1400.v7fd111b_ec82f">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@2.2198.v41dd8ef6dd56"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@2.2198.v41dd8ef6dd56">
      <jobProperties/>
      <triggers/>
      <parameters/>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@332.va_1ee476d8f6d">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@3894.vd0f0248b_a_fc4">
    <script>pipeline {
    agent any

    stages {
        stage(&apos;Build Core Dictionaries&apos;) {
            steps {
                script{
                    TEMP_ROLE = sh ( 
                        script: &quot;aws sts assume-role --duration-seconds 3600 --role-arn arn:aws:iam::736265540791:role/dbgap-etl --role-session-name s3-test&quot;,
                        returnStdout: true
                    ).trim()
                    TEMP_ROLE = readJSON text: &quot;${TEMP_ROLE}&quot;
                    AWS_ACCESS_KEY_ID = TEMP_ROLE.Credentials.AccessKeyId
                    AWS_SECRET_ACCESS_KEY = TEMP_ROLE.Credentials.SecretAccessKey
                    AWS_SESSION_TOKEN = TEMP_ROLE.Credentials.SessionToken
                    sh &apos;aws s3 cp s3://avillach-73-bdcatalyst-etl/general/resources/Managed_Inputs.csv managed_inputs.csv&apos;
                    def inputs = readCSV file: managed_inputs.csv
                    assert inputs [0][0] == &apos;Study Abbreviated Name&apos;
                }
            }    
        }        
    }
}</script>
    <sandbox>false</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>